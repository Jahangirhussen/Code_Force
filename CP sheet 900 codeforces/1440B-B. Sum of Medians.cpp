/**
My Name        : JAHANGIR HUSSEN
Country        : Bangladesh
Gmail          : jahangirhussen06@gmail.com
Github Link    : https://github.com/Jahangirhussen

WebSite Name   : Codeforces
Problem Name   : B. Sum of Medians
Problem Number : 1440B
Difficulty     : 900
Problem Link   : https://codeforces.com/problemset/problem/1440/B
STATUS         : Accepted
Problem Logic  : nk সংখ্যাগুলো ক্রমবর্ধমানভাবে দেওয়া আছে।
                 আমাদের কাজ হলো k সংখ্যক n সাইজের সাব-অ্যারে ভাগ করা এবং মিডিয়ান বের করা,
                 যাতে সর্বোচ্চ যোগফল পাওয়া যায়।
Problem Task   :
আমাদের কাজ:
যদি \(n = 9\) হয় তাহলে
সর্বপ্রথম অ্যারেটা সাজানো থাকবে, যেহেতু শেষের দিকে বড় সংখ্যা থাকবে।
এখন মিডিয়ান বের করতে \(9/2 = 4\) নম্বর মানে 5 নম্বর সংখ্যা,
এই জায়গায় বড় সংখ্যা রাখতে হবে এবং এর পরের সংখ্যাগুলোও বড় হতে হবে।
আমি যদি শেষ থেকে \(n/2\) পর্যন্ত মানগুলো যোগ করি এবং প্রথমের দিক থেকে ক্ষুদ্রতম মান যোগ করি, তাহলে আমাদের মিডিয়ানে সর্বোচ্চ মান আসবে এবং আগের বড় মান নষ্ট হবে না,
যা ব্যবহার করে পরবর্তীতে আবারো একটি বড় মিডিয়ান পাওয়া যাবে।

4 3
2 4 16 18 21 27 36 53 82 91 92 95

: [2,91,92,95],[4,36,53,82],[16,18,21,27]
. The medians are 91,36,18
. Their sum is 145
.
**/

#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;
    while (t--)
    {
        int n, k;
        cin >> n >> k;

        vector<int> a(n * k);
        for (int i = 0; i < n * k; i++)
        {
            cin >> a[i];
        }

        long long sum = 0;
        int i = n * k;
        while (k--)
        {
            i -= (n / 2 + 1);
            sum += a[i];
        }

        cout << sum << '\n'; // Output the result
    }

    return 0;
}

/**
** লুপের ভিতরের ব্যাখ্যা:

1. **while (k--):**
    - লুপ চলবে যতক্ষণ `k` ০ না হয়। প্রতি চক্রে `k` ১ করে কমে যাবে। যদি `k = 3` হয়, লুপ ৩ বার চলবে।

2. **i -= (n / 2 + 1);:**
    - `i` থেকে `(n / 2 + 1)` বিয়োগ করা হচ্ছে। উদাহরণস্বরূপ, যদি `n = 9` হয়, তাহলে `n / 2 = 4`, এবং `(n / 2 + 1)` হবে ৫। ফলে `i` থেকে ৫ বিয়োগ করা হচ্ছে প্রতি লুপে।
    - প্রথমে `i = n * k` অর্থাৎ অ্যারের সর্বশেষ পজিশনে অবস্থান করছিল।
    - প্রথম লুপ শেষে `i = 7` এ চলে আসে।

3. **sum += a[i];:**
    - নতুন `i` অনুযায়ী অ্যারের যে পজিশন থেকে মিডিয়ান ধরা হচ্ছে, সেই মানটি `sum` এর সাথে যোগ করা হচ্ছে।
    - উদাহরণ: যদি `i = 7` হয়, তাহলে `a[7]` এর মান `sum` এ যোগ হচ্ছে।

4. **উদাহরণ:**
    - শুরুতে `i = 12` (`n * k = 12`)।
    - প্রথম লুপ: `i -= 5 -> i = 7`, এরপর `sum += a[7]`।
    - দ্বিতীয় লুপ: `i -= 5 -> i = 2`, এরপর `sum += a[2]`।
    - তৃতীয় লুপ: লুপ শেষ হওয়ার আগে `k = 0` হয়ে যাবে।
**/
